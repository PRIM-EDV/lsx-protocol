"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               v4.25.3
// source: lsx.drone.proto
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SetModeSilentState_Response = exports.SetModeSilentState_Request = exports.SetModeSilentState = exports.GetModeSilentState_Request = exports.GetModeSilentState_Response = exports.GetModeSilentState = exports.GetBombAreaState_Request = exports.GetBombAreaState_Response = exports.GetBombAreaState = exports.BombArea_Request = exports.BombArea_Response = exports.BombArea = exports.BombBase_Request = exports.BombBase_Response = exports.BombBase = exports.ModeSilentState = exports.BombAreaState = exports.BombAreaId = exports.protobufPackage = void 0;
exports.bombAreaIdFromJSON = bombAreaIdFromJSON;
exports.bombAreaIdToJSON = bombAreaIdToJSON;
exports.bombAreaStateFromJSON = bombAreaStateFromJSON;
exports.bombAreaStateToJSON = bombAreaStateToJSON;
exports.modeSilentStateFromJSON = modeSilentStateFromJSON;
exports.modeSilentStateToJSON = modeSilentStateToJSON;
/* eslint-disable */
const _m0 = __importStar(require("protobufjs/minimal"));
exports.protobufPackage = "";
var BombAreaId;
(function (BombAreaId) {
    BombAreaId[BombAreaId["AREA_MED"] = 0] = "AREA_MED";
    BombAreaId[BombAreaId["AREA_CIC"] = 1] = "AREA_CIC";
    BombAreaId[BombAreaId["AREA_CORRIDOR"] = 2] = "AREA_CORRIDOR";
    BombAreaId[BombAreaId["AREA_HALL"] = 3] = "AREA_HALL";
    BombAreaId[BombAreaId["AREA_SCI"] = 4] = "AREA_SCI";
    BombAreaId[BombAreaId["AREA_TEC"] = 5] = "AREA_TEC";
    BombAreaId[BombAreaId["AREA_PARCEL"] = 6] = "AREA_PARCEL";
    BombAreaId[BombAreaId["AREA_TUNNEL"] = 7] = "AREA_TUNNEL";
    BombAreaId[BombAreaId["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(BombAreaId || (exports.BombAreaId = BombAreaId = {}));
function bombAreaIdFromJSON(object) {
    switch (object) {
        case 0:
        case "AREA_MED":
            return BombAreaId.AREA_MED;
        case 1:
        case "AREA_CIC":
            return BombAreaId.AREA_CIC;
        case 2:
        case "AREA_CORRIDOR":
            return BombAreaId.AREA_CORRIDOR;
        case 3:
        case "AREA_HALL":
            return BombAreaId.AREA_HALL;
        case 4:
        case "AREA_SCI":
            return BombAreaId.AREA_SCI;
        case 5:
        case "AREA_TEC":
            return BombAreaId.AREA_TEC;
        case 6:
        case "AREA_PARCEL":
            return BombAreaId.AREA_PARCEL;
        case 7:
        case "AREA_TUNNEL":
            return BombAreaId.AREA_TUNNEL;
        case -1:
        case "UNRECOGNIZED":
        default:
            return BombAreaId.UNRECOGNIZED;
    }
}
function bombAreaIdToJSON(object) {
    switch (object) {
        case BombAreaId.AREA_MED:
            return "AREA_MED";
        case BombAreaId.AREA_CIC:
            return "AREA_CIC";
        case BombAreaId.AREA_CORRIDOR:
            return "AREA_CORRIDOR";
        case BombAreaId.AREA_HALL:
            return "AREA_HALL";
        case BombAreaId.AREA_SCI:
            return "AREA_SCI";
        case BombAreaId.AREA_TEC:
            return "AREA_TEC";
        case BombAreaId.AREA_PARCEL:
            return "AREA_PARCEL";
        case BombAreaId.AREA_TUNNEL:
            return "AREA_TUNNEL";
        case BombAreaId.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
var BombAreaState;
(function (BombAreaState) {
    BombAreaState[BombAreaState["STATE_ARMED"] = 0] = "STATE_ARMED";
    BombAreaState[BombAreaState["STATE_FUSED"] = 1] = "STATE_FUSED";
    BombAreaState[BombAreaState["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(BombAreaState || (exports.BombAreaState = BombAreaState = {}));
function bombAreaStateFromJSON(object) {
    switch (object) {
        case 0:
        case "STATE_ARMED":
            return BombAreaState.STATE_ARMED;
        case 1:
        case "STATE_FUSED":
            return BombAreaState.STATE_FUSED;
        case -1:
        case "UNRECOGNIZED":
        default:
            return BombAreaState.UNRECOGNIZED;
    }
}
function bombAreaStateToJSON(object) {
    switch (object) {
        case BombAreaState.STATE_ARMED:
            return "STATE_ARMED";
        case BombAreaState.STATE_FUSED:
            return "STATE_FUSED";
        case BombAreaState.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
var ModeSilentState;
(function (ModeSilentState) {
    ModeSilentState[ModeSilentState["MODE_SILENT_STATE_EMPTY"] = 0] = "MODE_SILENT_STATE_EMPTY";
    ModeSilentState[ModeSilentState["MODE_SILENT_STATE_NORMAL"] = 1] = "MODE_SILENT_STATE_NORMAL";
    ModeSilentState[ModeSilentState["MODE_SILENT_STATE_SILENT"] = 2] = "MODE_SILENT_STATE_SILENT";
    ModeSilentState[ModeSilentState["MODE_SILENT_STATE_SILENT_DRONE"] = 3] = "MODE_SILENT_STATE_SILENT_DRONE";
    ModeSilentState[ModeSilentState["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(ModeSilentState || (exports.ModeSilentState = ModeSilentState = {}));
function modeSilentStateFromJSON(object) {
    switch (object) {
        case 0:
        case "MODE_SILENT_STATE_EMPTY":
            return ModeSilentState.MODE_SILENT_STATE_EMPTY;
        case 1:
        case "MODE_SILENT_STATE_NORMAL":
            return ModeSilentState.MODE_SILENT_STATE_NORMAL;
        case 2:
        case "MODE_SILENT_STATE_SILENT":
            return ModeSilentState.MODE_SILENT_STATE_SILENT;
        case 3:
        case "MODE_SILENT_STATE_SILENT_DRONE":
            return ModeSilentState.MODE_SILENT_STATE_SILENT_DRONE;
        case -1:
        case "UNRECOGNIZED":
        default:
            return ModeSilentState.UNRECOGNIZED;
    }
}
function modeSilentStateToJSON(object) {
    switch (object) {
        case ModeSilentState.MODE_SILENT_STATE_EMPTY:
            return "MODE_SILENT_STATE_EMPTY";
        case ModeSilentState.MODE_SILENT_STATE_NORMAL:
            return "MODE_SILENT_STATE_NORMAL";
        case ModeSilentState.MODE_SILENT_STATE_SILENT:
            return "MODE_SILENT_STATE_SILENT";
        case ModeSilentState.MODE_SILENT_STATE_SILENT_DRONE:
            return "MODE_SILENT_STATE_SILENT_DRONE";
        case ModeSilentState.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
function createBaseBombBase() {
    return {};
}
exports.BombBase = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBombBase();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.BombBase.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseBombBase();
        return message;
    },
};
function createBaseBombBase_Response() {
    return {};
}
exports.BombBase_Response = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBombBase_Response();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.BombBase_Response.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseBombBase_Response();
        return message;
    },
};
function createBaseBombBase_Request() {
    return {};
}
exports.BombBase_Request = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBombBase_Request();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.BombBase_Request.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseBombBase_Request();
        return message;
    },
};
function createBaseBombArea() {
    return {};
}
exports.BombArea = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBombArea();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.BombArea.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseBombArea();
        return message;
    },
};
function createBaseBombArea_Response() {
    return {};
}
exports.BombArea_Response = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBombArea_Response();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.BombArea_Response.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseBombArea_Response();
        return message;
    },
};
function createBaseBombArea_Request() {
    return { id: 0 };
}
exports.BombArea_Request = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.id !== 0) {
            writer.uint32(8).int32(message.id);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBombArea_Request();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.id = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { id: isSet(object.id) ? bombAreaIdFromJSON(object.id) : 0 };
    },
    toJSON(message) {
        const obj = {};
        if (message.id !== 0) {
            obj.id = bombAreaIdToJSON(message.id);
        }
        return obj;
    },
    create(base) {
        return exports.BombArea_Request.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseBombArea_Request();
        message.id = object.id ?? 0;
        return message;
    },
};
function createBaseGetBombAreaState() {
    return {};
}
exports.GetBombAreaState = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetBombAreaState();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.GetBombAreaState.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseGetBombAreaState();
        return message;
    },
};
function createBaseGetBombAreaState_Response() {
    return { state: 0 };
}
exports.GetBombAreaState_Response = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.state !== 0) {
            writer.uint32(8).int32(message.state);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetBombAreaState_Response();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.state = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { state: isSet(object.state) ? bombAreaStateFromJSON(object.state) : 0 };
    },
    toJSON(message) {
        const obj = {};
        if (message.state !== 0) {
            obj.state = bombAreaStateToJSON(message.state);
        }
        return obj;
    },
    create(base) {
        return exports.GetBombAreaState_Response.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseGetBombAreaState_Response();
        message.state = object.state ?? 0;
        return message;
    },
};
function createBaseGetBombAreaState_Request() {
    return { id: 0 };
}
exports.GetBombAreaState_Request = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.id !== 0) {
            writer.uint32(8).int32(message.id);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetBombAreaState_Request();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.id = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { id: isSet(object.id) ? bombAreaIdFromJSON(object.id) : 0 };
    },
    toJSON(message) {
        const obj = {};
        if (message.id !== 0) {
            obj.id = bombAreaIdToJSON(message.id);
        }
        return obj;
    },
    create(base) {
        return exports.GetBombAreaState_Request.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseGetBombAreaState_Request();
        message.id = object.id ?? 0;
        return message;
    },
};
function createBaseGetModeSilentState() {
    return {};
}
exports.GetModeSilentState = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetModeSilentState();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.GetModeSilentState.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseGetModeSilentState();
        return message;
    },
};
function createBaseGetModeSilentState_Response() {
    return { state: 0 };
}
exports.GetModeSilentState_Response = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.state !== 0) {
            writer.uint32(8).int32(message.state);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetModeSilentState_Response();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.state = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { state: isSet(object.state) ? modeSilentStateFromJSON(object.state) : 0 };
    },
    toJSON(message) {
        const obj = {};
        if (message.state !== 0) {
            obj.state = modeSilentStateToJSON(message.state);
        }
        return obj;
    },
    create(base) {
        return exports.GetModeSilentState_Response.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseGetModeSilentState_Response();
        message.state = object.state ?? 0;
        return message;
    },
};
function createBaseGetModeSilentState_Request() {
    return {};
}
exports.GetModeSilentState_Request = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetModeSilentState_Request();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.GetModeSilentState_Request.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseGetModeSilentState_Request();
        return message;
    },
};
function createBaseSetModeSilentState() {
    return {};
}
exports.SetModeSilentState = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSetModeSilentState();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.SetModeSilentState.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseSetModeSilentState();
        return message;
    },
};
function createBaseSetModeSilentState_Request() {
    return { state: 0 };
}
exports.SetModeSilentState_Request = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.state !== 0) {
            writer.uint32(8).int32(message.state);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSetModeSilentState_Request();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.state = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { state: isSet(object.state) ? modeSilentStateFromJSON(object.state) : 0 };
    },
    toJSON(message) {
        const obj = {};
        if (message.state !== 0) {
            obj.state = modeSilentStateToJSON(message.state);
        }
        return obj;
    },
    create(base) {
        return exports.SetModeSilentState_Request.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseSetModeSilentState_Request();
        message.state = object.state ?? 0;
        return message;
    },
};
function createBaseSetModeSilentState_Response() {
    return {};
}
exports.SetModeSilentState_Response = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSetModeSilentState_Response();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.SetModeSilentState_Response.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseSetModeSilentState_Response();
        return message;
    },
};
function isSet(value) {
    return value !== null && value !== undefined;
}
