"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               v4.25.3
// source: lsx.proto
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlayAnnouncement_Response = exports.PlayAnnouncement_Request = exports.PlayAnnouncement = exports.GetAnnouncementFiles_Request = exports.GetAnnouncementFiles_Response = exports.GetAnnouncementFiles = exports.LsxMessage = exports.Error = exports.Response = exports.Request = void 0;
/* eslint-disable */
const _m0 = __importStar(require("protobufjs/minimal"));
const lsx_drone_1 = require("./lsx.drone");
const lsx_fluff_1 = require("./lsx.fluff");
const lsx_light_1 = require("./lsx.light");
const lsx_lockdown_1 = require("./lsx.lockdown");
const lsx_power_1 = require("./lsx.power");
function createBaseRequest() {
    return {
        getPowerPlantState: undefined,
        setPowerPlantState: undefined,
        getAnnouncementFiles: undefined,
        getLockdownState: undefined,
        setLockdownState: undefined,
        getAutoLockdown: undefined,
        setAutoLockdown: undefined,
        getLockdownAnnouncements: undefined,
        setLockdownAnnouncements: undefined,
        getFluffFiles: undefined,
        getFluffState: undefined,
        setFluffState: undefined,
        playAnnouncement: undefined,
        getModeSilentState: undefined,
        setModeSilentState: undefined,
        bombBase: undefined,
        bombArea: undefined,
        getBombAreaState: undefined,
        getLightPowerState: undefined,
        setLightPowerState: undefined,
        getLightSwitchState: undefined,
        setLightSwitchState: undefined,
        getLightDmxState: undefined,
        setLightDmxState: undefined,
        getLightLockState: undefined,
        setLightLockState: undefined,
        getLightMode: undefined,
        setLightMode: undefined,
        getDevicePowerState: undefined,
        setDevicePowerState: undefined,
    };
}
exports.Request = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.getPowerPlantState !== undefined) {
            lsx_power_1.GetPowerPlantState_Request.encode(message.getPowerPlantState, writer.uint32(10).fork()).ldelim();
        }
        if (message.setPowerPlantState !== undefined) {
            lsx_power_1.SetPowerPlantState_Request.encode(message.setPowerPlantState, writer.uint32(18).fork()).ldelim();
        }
        if (message.getAnnouncementFiles !== undefined) {
            exports.GetAnnouncementFiles_Request.encode(message.getAnnouncementFiles, writer.uint32(42).fork()).ldelim();
        }
        if (message.getLockdownState !== undefined) {
            lsx_lockdown_1.GetLockdownState_Request.encode(message.getLockdownState, writer.uint32(50).fork()).ldelim();
        }
        if (message.setLockdownState !== undefined) {
            lsx_lockdown_1.SetLockdownState_Request.encode(message.setLockdownState, writer.uint32(58).fork()).ldelim();
        }
        if (message.getAutoLockdown !== undefined) {
            lsx_lockdown_1.GetAutoLockdown_Request.encode(message.getAutoLockdown, writer.uint32(66).fork()).ldelim();
        }
        if (message.setAutoLockdown !== undefined) {
            lsx_lockdown_1.SetAutoLockdown_Request.encode(message.setAutoLockdown, writer.uint32(74).fork()).ldelim();
        }
        if (message.getLockdownAnnouncements !== undefined) {
            lsx_lockdown_1.GetLockdownAnnouncements_Request.encode(message.getLockdownAnnouncements, writer.uint32(82).fork()).ldelim();
        }
        if (message.setLockdownAnnouncements !== undefined) {
            lsx_lockdown_1.SetLockdownAnnouncements_Request.encode(message.setLockdownAnnouncements, writer.uint32(90).fork()).ldelim();
        }
        if (message.getFluffFiles !== undefined) {
            lsx_fluff_1.GetFluffFiles_Request.encode(message.getFluffFiles, writer.uint32(98).fork()).ldelim();
        }
        if (message.getFluffState !== undefined) {
            lsx_fluff_1.GetFluffState_Request.encode(message.getFluffState, writer.uint32(106).fork()).ldelim();
        }
        if (message.setFluffState !== undefined) {
            lsx_fluff_1.SetFluffState_Request.encode(message.setFluffState, writer.uint32(114).fork()).ldelim();
        }
        if (message.playAnnouncement !== undefined) {
            exports.PlayAnnouncement_Request.encode(message.playAnnouncement, writer.uint32(122).fork()).ldelim();
        }
        if (message.getModeSilentState !== undefined) {
            lsx_drone_1.GetModeSilentState_Request.encode(message.getModeSilentState, writer.uint32(130).fork()).ldelim();
        }
        if (message.setModeSilentState !== undefined) {
            lsx_drone_1.SetModeSilentState_Request.encode(message.setModeSilentState, writer.uint32(138).fork()).ldelim();
        }
        if (message.bombBase !== undefined) {
            lsx_drone_1.BombBase_Request.encode(message.bombBase, writer.uint32(146).fork()).ldelim();
        }
        if (message.bombArea !== undefined) {
            lsx_drone_1.BombArea_Request.encode(message.bombArea, writer.uint32(154).fork()).ldelim();
        }
        if (message.getBombAreaState !== undefined) {
            lsx_drone_1.GetBombAreaState_Request.encode(message.getBombAreaState, writer.uint32(162).fork()).ldelim();
        }
        if (message.getLightPowerState !== undefined) {
            lsx_light_1.GetLightPowerState_Request.encode(message.getLightPowerState, writer.uint32(170).fork()).ldelim();
        }
        if (message.setLightPowerState !== undefined) {
            lsx_light_1.SetLightPowerState_Request.encode(message.setLightPowerState, writer.uint32(178).fork()).ldelim();
        }
        if (message.getLightSwitchState !== undefined) {
            lsx_light_1.GetLightSwitchState_Request.encode(message.getLightSwitchState, writer.uint32(186).fork()).ldelim();
        }
        if (message.setLightSwitchState !== undefined) {
            lsx_light_1.SetLightSwitchState_Request.encode(message.setLightSwitchState, writer.uint32(194).fork()).ldelim();
        }
        if (message.getLightDmxState !== undefined) {
            lsx_light_1.GetLightDmxState_Request.encode(message.getLightDmxState, writer.uint32(202).fork()).ldelim();
        }
        if (message.setLightDmxState !== undefined) {
            lsx_light_1.SetLightDmxState_Request.encode(message.setLightDmxState, writer.uint32(210).fork()).ldelim();
        }
        if (message.getLightLockState !== undefined) {
            lsx_light_1.GetLightLockState_Request.encode(message.getLightLockState, writer.uint32(218).fork()).ldelim();
        }
        if (message.setLightLockState !== undefined) {
            lsx_light_1.SetLightLockState_Request.encode(message.setLightLockState, writer.uint32(226).fork()).ldelim();
        }
        if (message.getLightMode !== undefined) {
            lsx_light_1.GetLightMode_Request.encode(message.getLightMode, writer.uint32(234).fork()).ldelim();
        }
        if (message.setLightMode !== undefined) {
            lsx_light_1.SetLightMode_Request.encode(message.setLightMode, writer.uint32(242).fork()).ldelim();
        }
        if (message.getDevicePowerState !== undefined) {
            lsx_power_1.GetDevicePowerState_Request.encode(message.getDevicePowerState, writer.uint32(250).fork()).ldelim();
        }
        if (message.setDevicePowerState !== undefined) {
            lsx_power_1.SetDevicePowerState_Request.encode(message.setDevicePowerState, writer.uint32(258).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.getPowerPlantState = lsx_power_1.GetPowerPlantState_Request.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.setPowerPlantState = lsx_power_1.SetPowerPlantState_Request.decode(reader, reader.uint32());
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.getAnnouncementFiles = exports.GetAnnouncementFiles_Request.decode(reader, reader.uint32());
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.getLockdownState = lsx_lockdown_1.GetLockdownState_Request.decode(reader, reader.uint32());
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.setLockdownState = lsx_lockdown_1.SetLockdownState_Request.decode(reader, reader.uint32());
                    continue;
                case 8:
                    if (tag !== 66) {
                        break;
                    }
                    message.getAutoLockdown = lsx_lockdown_1.GetAutoLockdown_Request.decode(reader, reader.uint32());
                    continue;
                case 9:
                    if (tag !== 74) {
                        break;
                    }
                    message.setAutoLockdown = lsx_lockdown_1.SetAutoLockdown_Request.decode(reader, reader.uint32());
                    continue;
                case 10:
                    if (tag !== 82) {
                        break;
                    }
                    message.getLockdownAnnouncements = lsx_lockdown_1.GetLockdownAnnouncements_Request.decode(reader, reader.uint32());
                    continue;
                case 11:
                    if (tag !== 90) {
                        break;
                    }
                    message.setLockdownAnnouncements = lsx_lockdown_1.SetLockdownAnnouncements_Request.decode(reader, reader.uint32());
                    continue;
                case 12:
                    if (tag !== 98) {
                        break;
                    }
                    message.getFluffFiles = lsx_fluff_1.GetFluffFiles_Request.decode(reader, reader.uint32());
                    continue;
                case 13:
                    if (tag !== 106) {
                        break;
                    }
                    message.getFluffState = lsx_fluff_1.GetFluffState_Request.decode(reader, reader.uint32());
                    continue;
                case 14:
                    if (tag !== 114) {
                        break;
                    }
                    message.setFluffState = lsx_fluff_1.SetFluffState_Request.decode(reader, reader.uint32());
                    continue;
                case 15:
                    if (tag !== 122) {
                        break;
                    }
                    message.playAnnouncement = exports.PlayAnnouncement_Request.decode(reader, reader.uint32());
                    continue;
                case 16:
                    if (tag !== 130) {
                        break;
                    }
                    message.getModeSilentState = lsx_drone_1.GetModeSilentState_Request.decode(reader, reader.uint32());
                    continue;
                case 17:
                    if (tag !== 138) {
                        break;
                    }
                    message.setModeSilentState = lsx_drone_1.SetModeSilentState_Request.decode(reader, reader.uint32());
                    continue;
                case 18:
                    if (tag !== 146) {
                        break;
                    }
                    message.bombBase = lsx_drone_1.BombBase_Request.decode(reader, reader.uint32());
                    continue;
                case 19:
                    if (tag !== 154) {
                        break;
                    }
                    message.bombArea = lsx_drone_1.BombArea_Request.decode(reader, reader.uint32());
                    continue;
                case 20:
                    if (tag !== 162) {
                        break;
                    }
                    message.getBombAreaState = lsx_drone_1.GetBombAreaState_Request.decode(reader, reader.uint32());
                    continue;
                case 21:
                    if (tag !== 170) {
                        break;
                    }
                    message.getLightPowerState = lsx_light_1.GetLightPowerState_Request.decode(reader, reader.uint32());
                    continue;
                case 22:
                    if (tag !== 178) {
                        break;
                    }
                    message.setLightPowerState = lsx_light_1.SetLightPowerState_Request.decode(reader, reader.uint32());
                    continue;
                case 23:
                    if (tag !== 186) {
                        break;
                    }
                    message.getLightSwitchState = lsx_light_1.GetLightSwitchState_Request.decode(reader, reader.uint32());
                    continue;
                case 24:
                    if (tag !== 194) {
                        break;
                    }
                    message.setLightSwitchState = lsx_light_1.SetLightSwitchState_Request.decode(reader, reader.uint32());
                    continue;
                case 25:
                    if (tag !== 202) {
                        break;
                    }
                    message.getLightDmxState = lsx_light_1.GetLightDmxState_Request.decode(reader, reader.uint32());
                    continue;
                case 26:
                    if (tag !== 210) {
                        break;
                    }
                    message.setLightDmxState = lsx_light_1.SetLightDmxState_Request.decode(reader, reader.uint32());
                    continue;
                case 27:
                    if (tag !== 218) {
                        break;
                    }
                    message.getLightLockState = lsx_light_1.GetLightLockState_Request.decode(reader, reader.uint32());
                    continue;
                case 28:
                    if (tag !== 226) {
                        break;
                    }
                    message.setLightLockState = lsx_light_1.SetLightLockState_Request.decode(reader, reader.uint32());
                    continue;
                case 29:
                    if (tag !== 234) {
                        break;
                    }
                    message.getLightMode = lsx_light_1.GetLightMode_Request.decode(reader, reader.uint32());
                    continue;
                case 30:
                    if (tag !== 242) {
                        break;
                    }
                    message.setLightMode = lsx_light_1.SetLightMode_Request.decode(reader, reader.uint32());
                    continue;
                case 31:
                    if (tag !== 250) {
                        break;
                    }
                    message.getDevicePowerState = lsx_power_1.GetDevicePowerState_Request.decode(reader, reader.uint32());
                    continue;
                case 32:
                    if (tag !== 258) {
                        break;
                    }
                    message.setDevicePowerState = lsx_power_1.SetDevicePowerState_Request.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            getPowerPlantState: isSet(object.getPowerPlantState)
                ? lsx_power_1.GetPowerPlantState_Request.fromJSON(object.getPowerPlantState)
                : undefined,
            setPowerPlantState: isSet(object.setPowerPlantState)
                ? lsx_power_1.SetPowerPlantState_Request.fromJSON(object.setPowerPlantState)
                : undefined,
            getAnnouncementFiles: isSet(object.getAnnouncementFiles)
                ? exports.GetAnnouncementFiles_Request.fromJSON(object.getAnnouncementFiles)
                : undefined,
            getLockdownState: isSet(object.getLockdownState)
                ? lsx_lockdown_1.GetLockdownState_Request.fromJSON(object.getLockdownState)
                : undefined,
            setLockdownState: isSet(object.setLockdownState)
                ? lsx_lockdown_1.SetLockdownState_Request.fromJSON(object.setLockdownState)
                : undefined,
            getAutoLockdown: isSet(object.getAutoLockdown)
                ? lsx_lockdown_1.GetAutoLockdown_Request.fromJSON(object.getAutoLockdown)
                : undefined,
            setAutoLockdown: isSet(object.setAutoLockdown)
                ? lsx_lockdown_1.SetAutoLockdown_Request.fromJSON(object.setAutoLockdown)
                : undefined,
            getLockdownAnnouncements: isSet(object.getLockdownAnnouncements)
                ? lsx_lockdown_1.GetLockdownAnnouncements_Request.fromJSON(object.getLockdownAnnouncements)
                : undefined,
            setLockdownAnnouncements: isSet(object.setLockdownAnnouncements)
                ? lsx_lockdown_1.SetLockdownAnnouncements_Request.fromJSON(object.setLockdownAnnouncements)
                : undefined,
            getFluffFiles: isSet(object.getFluffFiles) ? lsx_fluff_1.GetFluffFiles_Request.fromJSON(object.getFluffFiles) : undefined,
            getFluffState: isSet(object.getFluffState) ? lsx_fluff_1.GetFluffState_Request.fromJSON(object.getFluffState) : undefined,
            setFluffState: isSet(object.setFluffState) ? lsx_fluff_1.SetFluffState_Request.fromJSON(object.setFluffState) : undefined,
            playAnnouncement: isSet(object.playAnnouncement)
                ? exports.PlayAnnouncement_Request.fromJSON(object.playAnnouncement)
                : undefined,
            getModeSilentState: isSet(object.getModeSilentState)
                ? lsx_drone_1.GetModeSilentState_Request.fromJSON(object.getModeSilentState)
                : undefined,
            setModeSilentState: isSet(object.setModeSilentState)
                ? lsx_drone_1.SetModeSilentState_Request.fromJSON(object.setModeSilentState)
                : undefined,
            bombBase: isSet(object.bombBase) ? lsx_drone_1.BombBase_Request.fromJSON(object.bombBase) : undefined,
            bombArea: isSet(object.bombArea) ? lsx_drone_1.BombArea_Request.fromJSON(object.bombArea) : undefined,
            getBombAreaState: isSet(object.getBombAreaState)
                ? lsx_drone_1.GetBombAreaState_Request.fromJSON(object.getBombAreaState)
                : undefined,
            getLightPowerState: isSet(object.getLightPowerState)
                ? lsx_light_1.GetLightPowerState_Request.fromJSON(object.getLightPowerState)
                : undefined,
            setLightPowerState: isSet(object.setLightPowerState)
                ? lsx_light_1.SetLightPowerState_Request.fromJSON(object.setLightPowerState)
                : undefined,
            getLightSwitchState: isSet(object.getLightSwitchState)
                ? lsx_light_1.GetLightSwitchState_Request.fromJSON(object.getLightSwitchState)
                : undefined,
            setLightSwitchState: isSet(object.setLightSwitchState)
                ? lsx_light_1.SetLightSwitchState_Request.fromJSON(object.setLightSwitchState)
                : undefined,
            getLightDmxState: isSet(object.getLightDmxState)
                ? lsx_light_1.GetLightDmxState_Request.fromJSON(object.getLightDmxState)
                : undefined,
            setLightDmxState: isSet(object.setLightDmxState)
                ? lsx_light_1.SetLightDmxState_Request.fromJSON(object.setLightDmxState)
                : undefined,
            getLightLockState: isSet(object.getLightLockState)
                ? lsx_light_1.GetLightLockState_Request.fromJSON(object.getLightLockState)
                : undefined,
            setLightLockState: isSet(object.setLightLockState)
                ? lsx_light_1.SetLightLockState_Request.fromJSON(object.setLightLockState)
                : undefined,
            getLightMode: isSet(object.getLightMode) ? lsx_light_1.GetLightMode_Request.fromJSON(object.getLightMode) : undefined,
            setLightMode: isSet(object.setLightMode) ? lsx_light_1.SetLightMode_Request.fromJSON(object.setLightMode) : undefined,
            getDevicePowerState: isSet(object.getDevicePowerState)
                ? lsx_power_1.GetDevicePowerState_Request.fromJSON(object.getDevicePowerState)
                : undefined,
            setDevicePowerState: isSet(object.setDevicePowerState)
                ? lsx_power_1.SetDevicePowerState_Request.fromJSON(object.setDevicePowerState)
                : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.getPowerPlantState !== undefined) {
            obj.getPowerPlantState = lsx_power_1.GetPowerPlantState_Request.toJSON(message.getPowerPlantState);
        }
        if (message.setPowerPlantState !== undefined) {
            obj.setPowerPlantState = lsx_power_1.SetPowerPlantState_Request.toJSON(message.setPowerPlantState);
        }
        if (message.getAnnouncementFiles !== undefined) {
            obj.getAnnouncementFiles = exports.GetAnnouncementFiles_Request.toJSON(message.getAnnouncementFiles);
        }
        if (message.getLockdownState !== undefined) {
            obj.getLockdownState = lsx_lockdown_1.GetLockdownState_Request.toJSON(message.getLockdownState);
        }
        if (message.setLockdownState !== undefined) {
            obj.setLockdownState = lsx_lockdown_1.SetLockdownState_Request.toJSON(message.setLockdownState);
        }
        if (message.getAutoLockdown !== undefined) {
            obj.getAutoLockdown = lsx_lockdown_1.GetAutoLockdown_Request.toJSON(message.getAutoLockdown);
        }
        if (message.setAutoLockdown !== undefined) {
            obj.setAutoLockdown = lsx_lockdown_1.SetAutoLockdown_Request.toJSON(message.setAutoLockdown);
        }
        if (message.getLockdownAnnouncements !== undefined) {
            obj.getLockdownAnnouncements = lsx_lockdown_1.GetLockdownAnnouncements_Request.toJSON(message.getLockdownAnnouncements);
        }
        if (message.setLockdownAnnouncements !== undefined) {
            obj.setLockdownAnnouncements = lsx_lockdown_1.SetLockdownAnnouncements_Request.toJSON(message.setLockdownAnnouncements);
        }
        if (message.getFluffFiles !== undefined) {
            obj.getFluffFiles = lsx_fluff_1.GetFluffFiles_Request.toJSON(message.getFluffFiles);
        }
        if (message.getFluffState !== undefined) {
            obj.getFluffState = lsx_fluff_1.GetFluffState_Request.toJSON(message.getFluffState);
        }
        if (message.setFluffState !== undefined) {
            obj.setFluffState = lsx_fluff_1.SetFluffState_Request.toJSON(message.setFluffState);
        }
        if (message.playAnnouncement !== undefined) {
            obj.playAnnouncement = exports.PlayAnnouncement_Request.toJSON(message.playAnnouncement);
        }
        if (message.getModeSilentState !== undefined) {
            obj.getModeSilentState = lsx_drone_1.GetModeSilentState_Request.toJSON(message.getModeSilentState);
        }
        if (message.setModeSilentState !== undefined) {
            obj.setModeSilentState = lsx_drone_1.SetModeSilentState_Request.toJSON(message.setModeSilentState);
        }
        if (message.bombBase !== undefined) {
            obj.bombBase = lsx_drone_1.BombBase_Request.toJSON(message.bombBase);
        }
        if (message.bombArea !== undefined) {
            obj.bombArea = lsx_drone_1.BombArea_Request.toJSON(message.bombArea);
        }
        if (message.getBombAreaState !== undefined) {
            obj.getBombAreaState = lsx_drone_1.GetBombAreaState_Request.toJSON(message.getBombAreaState);
        }
        if (message.getLightPowerState !== undefined) {
            obj.getLightPowerState = lsx_light_1.GetLightPowerState_Request.toJSON(message.getLightPowerState);
        }
        if (message.setLightPowerState !== undefined) {
            obj.setLightPowerState = lsx_light_1.SetLightPowerState_Request.toJSON(message.setLightPowerState);
        }
        if (message.getLightSwitchState !== undefined) {
            obj.getLightSwitchState = lsx_light_1.GetLightSwitchState_Request.toJSON(message.getLightSwitchState);
        }
        if (message.setLightSwitchState !== undefined) {
            obj.setLightSwitchState = lsx_light_1.SetLightSwitchState_Request.toJSON(message.setLightSwitchState);
        }
        if (message.getLightDmxState !== undefined) {
            obj.getLightDmxState = lsx_light_1.GetLightDmxState_Request.toJSON(message.getLightDmxState);
        }
        if (message.setLightDmxState !== undefined) {
            obj.setLightDmxState = lsx_light_1.SetLightDmxState_Request.toJSON(message.setLightDmxState);
        }
        if (message.getLightLockState !== undefined) {
            obj.getLightLockState = lsx_light_1.GetLightLockState_Request.toJSON(message.getLightLockState);
        }
        if (message.setLightLockState !== undefined) {
            obj.setLightLockState = lsx_light_1.SetLightLockState_Request.toJSON(message.setLightLockState);
        }
        if (message.getLightMode !== undefined) {
            obj.getLightMode = lsx_light_1.GetLightMode_Request.toJSON(message.getLightMode);
        }
        if (message.setLightMode !== undefined) {
            obj.setLightMode = lsx_light_1.SetLightMode_Request.toJSON(message.setLightMode);
        }
        if (message.getDevicePowerState !== undefined) {
            obj.getDevicePowerState = lsx_power_1.GetDevicePowerState_Request.toJSON(message.getDevicePowerState);
        }
        if (message.setDevicePowerState !== undefined) {
            obj.setDevicePowerState = lsx_power_1.SetDevicePowerState_Request.toJSON(message.setDevicePowerState);
        }
        return obj;
    },
    create(base) {
        return exports.Request.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseRequest();
        message.getPowerPlantState = (object.getPowerPlantState !== undefined && object.getPowerPlantState !== null)
            ? lsx_power_1.GetPowerPlantState_Request.fromPartial(object.getPowerPlantState)
            : undefined;
        message.setPowerPlantState = (object.setPowerPlantState !== undefined && object.setPowerPlantState !== null)
            ? lsx_power_1.SetPowerPlantState_Request.fromPartial(object.setPowerPlantState)
            : undefined;
        message.getAnnouncementFiles = (object.getAnnouncementFiles !== undefined && object.getAnnouncementFiles !== null)
            ? exports.GetAnnouncementFiles_Request.fromPartial(object.getAnnouncementFiles)
            : undefined;
        message.getLockdownState = (object.getLockdownState !== undefined && object.getLockdownState !== null)
            ? lsx_lockdown_1.GetLockdownState_Request.fromPartial(object.getLockdownState)
            : undefined;
        message.setLockdownState = (object.setLockdownState !== undefined && object.setLockdownState !== null)
            ? lsx_lockdown_1.SetLockdownState_Request.fromPartial(object.setLockdownState)
            : undefined;
        message.getAutoLockdown = (object.getAutoLockdown !== undefined && object.getAutoLockdown !== null)
            ? lsx_lockdown_1.GetAutoLockdown_Request.fromPartial(object.getAutoLockdown)
            : undefined;
        message.setAutoLockdown = (object.setAutoLockdown !== undefined && object.setAutoLockdown !== null)
            ? lsx_lockdown_1.SetAutoLockdown_Request.fromPartial(object.setAutoLockdown)
            : undefined;
        message.getLockdownAnnouncements =
            (object.getLockdownAnnouncements !== undefined && object.getLockdownAnnouncements !== null)
                ? lsx_lockdown_1.GetLockdownAnnouncements_Request.fromPartial(object.getLockdownAnnouncements)
                : undefined;
        message.setLockdownAnnouncements =
            (object.setLockdownAnnouncements !== undefined && object.setLockdownAnnouncements !== null)
                ? lsx_lockdown_1.SetLockdownAnnouncements_Request.fromPartial(object.setLockdownAnnouncements)
                : undefined;
        message.getFluffFiles = (object.getFluffFiles !== undefined && object.getFluffFiles !== null)
            ? lsx_fluff_1.GetFluffFiles_Request.fromPartial(object.getFluffFiles)
            : undefined;
        message.getFluffState = (object.getFluffState !== undefined && object.getFluffState !== null)
            ? lsx_fluff_1.GetFluffState_Request.fromPartial(object.getFluffState)
            : undefined;
        message.setFluffState = (object.setFluffState !== undefined && object.setFluffState !== null)
            ? lsx_fluff_1.SetFluffState_Request.fromPartial(object.setFluffState)
            : undefined;
        message.playAnnouncement = (object.playAnnouncement !== undefined && object.playAnnouncement !== null)
            ? exports.PlayAnnouncement_Request.fromPartial(object.playAnnouncement)
            : undefined;
        message.getModeSilentState = (object.getModeSilentState !== undefined && object.getModeSilentState !== null)
            ? lsx_drone_1.GetModeSilentState_Request.fromPartial(object.getModeSilentState)
            : undefined;
        message.setModeSilentState = (object.setModeSilentState !== undefined && object.setModeSilentState !== null)
            ? lsx_drone_1.SetModeSilentState_Request.fromPartial(object.setModeSilentState)
            : undefined;
        message.bombBase = (object.bombBase !== undefined && object.bombBase !== null)
            ? lsx_drone_1.BombBase_Request.fromPartial(object.bombBase)
            : undefined;
        message.bombArea = (object.bombArea !== undefined && object.bombArea !== null)
            ? lsx_drone_1.BombArea_Request.fromPartial(object.bombArea)
            : undefined;
        message.getBombAreaState = (object.getBombAreaState !== undefined && object.getBombAreaState !== null)
            ? lsx_drone_1.GetBombAreaState_Request.fromPartial(object.getBombAreaState)
            : undefined;
        message.getLightPowerState = (object.getLightPowerState !== undefined && object.getLightPowerState !== null)
            ? lsx_light_1.GetLightPowerState_Request.fromPartial(object.getLightPowerState)
            : undefined;
        message.setLightPowerState = (object.setLightPowerState !== undefined && object.setLightPowerState !== null)
            ? lsx_light_1.SetLightPowerState_Request.fromPartial(object.setLightPowerState)
            : undefined;
        message.getLightSwitchState = (object.getLightSwitchState !== undefined && object.getLightSwitchState !== null)
            ? lsx_light_1.GetLightSwitchState_Request.fromPartial(object.getLightSwitchState)
            : undefined;
        message.setLightSwitchState = (object.setLightSwitchState !== undefined && object.setLightSwitchState !== null)
            ? lsx_light_1.SetLightSwitchState_Request.fromPartial(object.setLightSwitchState)
            : undefined;
        message.getLightDmxState = (object.getLightDmxState !== undefined && object.getLightDmxState !== null)
            ? lsx_light_1.GetLightDmxState_Request.fromPartial(object.getLightDmxState)
            : undefined;
        message.setLightDmxState = (object.setLightDmxState !== undefined && object.setLightDmxState !== null)
            ? lsx_light_1.SetLightDmxState_Request.fromPartial(object.setLightDmxState)
            : undefined;
        message.getLightLockState = (object.getLightLockState !== undefined && object.getLightLockState !== null)
            ? lsx_light_1.GetLightLockState_Request.fromPartial(object.getLightLockState)
            : undefined;
        message.setLightLockState = (object.setLightLockState !== undefined && object.setLightLockState !== null)
            ? lsx_light_1.SetLightLockState_Request.fromPartial(object.setLightLockState)
            : undefined;
        message.getLightMode = (object.getLightMode !== undefined && object.getLightMode !== null)
            ? lsx_light_1.GetLightMode_Request.fromPartial(object.getLightMode)
            : undefined;
        message.setLightMode = (object.setLightMode !== undefined && object.setLightMode !== null)
            ? lsx_light_1.SetLightMode_Request.fromPartial(object.setLightMode)
            : undefined;
        message.getDevicePowerState = (object.getDevicePowerState !== undefined && object.getDevicePowerState !== null)
            ? lsx_power_1.GetDevicePowerState_Request.fromPartial(object.getDevicePowerState)
            : undefined;
        message.setDevicePowerState = (object.setDevicePowerState !== undefined && object.setDevicePowerState !== null)
            ? lsx_power_1.SetDevicePowerState_Request.fromPartial(object.setDevicePowerState)
            : undefined;
        return message;
    },
};
function createBaseResponse() {
    return {
        getPowerPlantState: undefined,
        setPowerPlantState: undefined,
        getAnnouncementFiles: undefined,
        getLockdownState: undefined,
        setLockdownState: undefined,
        getAutoLockdown: undefined,
        setAutoLockdown: undefined,
        getLockdownAnnouncements: undefined,
        setLockdownAnnouncements: undefined,
        getFluffFiles: undefined,
        getFluffState: undefined,
        setFluffState: undefined,
        playAnnouncement: undefined,
        getModeSilentState: undefined,
        setModeSilentState: undefined,
        bombBase: undefined,
        bombArea: undefined,
        getBombAreaState: undefined,
        getLightPowerState: undefined,
        setLightPowerState: undefined,
        getLightSwitchState: undefined,
        setLightSwitchState: undefined,
        getLightDmxState: undefined,
        setLightDmxState: undefined,
        getLightLockState: undefined,
        setLightLockState: undefined,
        getLightMode: undefined,
        setLightMode: undefined,
        getDevicePowerState: undefined,
        setDevicePowerState: undefined,
    };
}
exports.Response = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.getPowerPlantState !== undefined) {
            lsx_power_1.GetPowerPlantState_Response.encode(message.getPowerPlantState, writer.uint32(10).fork()).ldelim();
        }
        if (message.setPowerPlantState !== undefined) {
            lsx_power_1.SetPowerPlantState_Response.encode(message.setPowerPlantState, writer.uint32(18).fork()).ldelim();
        }
        if (message.getAnnouncementFiles !== undefined) {
            exports.GetAnnouncementFiles_Response.encode(message.getAnnouncementFiles, writer.uint32(42).fork()).ldelim();
        }
        if (message.getLockdownState !== undefined) {
            lsx_lockdown_1.GetLockdownState_Response.encode(message.getLockdownState, writer.uint32(50).fork()).ldelim();
        }
        if (message.setLockdownState !== undefined) {
            lsx_lockdown_1.SetLockdownState_Response.encode(message.setLockdownState, writer.uint32(58).fork()).ldelim();
        }
        if (message.getAutoLockdown !== undefined) {
            lsx_lockdown_1.GetAutoLockdown_Response.encode(message.getAutoLockdown, writer.uint32(66).fork()).ldelim();
        }
        if (message.setAutoLockdown !== undefined) {
            lsx_lockdown_1.SetAutoLockdown_Response.encode(message.setAutoLockdown, writer.uint32(74).fork()).ldelim();
        }
        if (message.getLockdownAnnouncements !== undefined) {
            lsx_lockdown_1.GetLockdownAnnouncements_Response.encode(message.getLockdownAnnouncements, writer.uint32(82).fork()).ldelim();
        }
        if (message.setLockdownAnnouncements !== undefined) {
            lsx_lockdown_1.SetLockdownAnnouncements_Response.encode(message.setLockdownAnnouncements, writer.uint32(90).fork()).ldelim();
        }
        if (message.getFluffFiles !== undefined) {
            lsx_fluff_1.GetFluffFiles_Response.encode(message.getFluffFiles, writer.uint32(98).fork()).ldelim();
        }
        if (message.getFluffState !== undefined) {
            lsx_fluff_1.GetFluffState_Response.encode(message.getFluffState, writer.uint32(106).fork()).ldelim();
        }
        if (message.setFluffState !== undefined) {
            lsx_fluff_1.SetFluffState_Response.encode(message.setFluffState, writer.uint32(114).fork()).ldelim();
        }
        if (message.playAnnouncement !== undefined) {
            exports.PlayAnnouncement_Response.encode(message.playAnnouncement, writer.uint32(122).fork()).ldelim();
        }
        if (message.getModeSilentState !== undefined) {
            lsx_drone_1.GetModeSilentState_Response.encode(message.getModeSilentState, writer.uint32(130).fork()).ldelim();
        }
        if (message.setModeSilentState !== undefined) {
            lsx_drone_1.SetModeSilentState_Response.encode(message.setModeSilentState, writer.uint32(138).fork()).ldelim();
        }
        if (message.bombBase !== undefined) {
            lsx_drone_1.BombBase_Response.encode(message.bombBase, writer.uint32(146).fork()).ldelim();
        }
        if (message.bombArea !== undefined) {
            lsx_drone_1.BombArea_Response.encode(message.bombArea, writer.uint32(154).fork()).ldelim();
        }
        if (message.getBombAreaState !== undefined) {
            lsx_drone_1.GetBombAreaState_Response.encode(message.getBombAreaState, writer.uint32(162).fork()).ldelim();
        }
        if (message.getLightPowerState !== undefined) {
            lsx_light_1.GetLightPowerState_Response.encode(message.getLightPowerState, writer.uint32(170).fork()).ldelim();
        }
        if (message.setLightPowerState !== undefined) {
            lsx_light_1.SetLightPowerState_Response.encode(message.setLightPowerState, writer.uint32(178).fork()).ldelim();
        }
        if (message.getLightSwitchState !== undefined) {
            lsx_light_1.GetLightSwitchState_Response.encode(message.getLightSwitchState, writer.uint32(186).fork()).ldelim();
        }
        if (message.setLightSwitchState !== undefined) {
            lsx_light_1.SetLightSwitchState_Response.encode(message.setLightSwitchState, writer.uint32(194).fork()).ldelim();
        }
        if (message.getLightDmxState !== undefined) {
            lsx_light_1.GetLightDmxState_Response.encode(message.getLightDmxState, writer.uint32(202).fork()).ldelim();
        }
        if (message.setLightDmxState !== undefined) {
            lsx_light_1.SetLightDmxState_Response.encode(message.setLightDmxState, writer.uint32(210).fork()).ldelim();
        }
        if (message.getLightLockState !== undefined) {
            lsx_light_1.GetLightLockState_Response.encode(message.getLightLockState, writer.uint32(218).fork()).ldelim();
        }
        if (message.setLightLockState !== undefined) {
            lsx_light_1.SetLightLockState_Response.encode(message.setLightLockState, writer.uint32(226).fork()).ldelim();
        }
        if (message.getLightMode !== undefined) {
            lsx_light_1.GetLightMode_Response.encode(message.getLightMode, writer.uint32(234).fork()).ldelim();
        }
        if (message.setLightMode !== undefined) {
            lsx_light_1.SetLightMode_Response.encode(message.setLightMode, writer.uint32(242).fork()).ldelim();
        }
        if (message.getDevicePowerState !== undefined) {
            lsx_power_1.GetDevicePowerState_Response.encode(message.getDevicePowerState, writer.uint32(250).fork()).ldelim();
        }
        if (message.setDevicePowerState !== undefined) {
            lsx_power_1.SetDevicePowerState_Response.encode(message.setDevicePowerState, writer.uint32(258).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.getPowerPlantState = lsx_power_1.GetPowerPlantState_Response.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.setPowerPlantState = lsx_power_1.SetPowerPlantState_Response.decode(reader, reader.uint32());
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.getAnnouncementFiles = exports.GetAnnouncementFiles_Response.decode(reader, reader.uint32());
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.getLockdownState = lsx_lockdown_1.GetLockdownState_Response.decode(reader, reader.uint32());
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.setLockdownState = lsx_lockdown_1.SetLockdownState_Response.decode(reader, reader.uint32());
                    continue;
                case 8:
                    if (tag !== 66) {
                        break;
                    }
                    message.getAutoLockdown = lsx_lockdown_1.GetAutoLockdown_Response.decode(reader, reader.uint32());
                    continue;
                case 9:
                    if (tag !== 74) {
                        break;
                    }
                    message.setAutoLockdown = lsx_lockdown_1.SetAutoLockdown_Response.decode(reader, reader.uint32());
                    continue;
                case 10:
                    if (tag !== 82) {
                        break;
                    }
                    message.getLockdownAnnouncements = lsx_lockdown_1.GetLockdownAnnouncements_Response.decode(reader, reader.uint32());
                    continue;
                case 11:
                    if (tag !== 90) {
                        break;
                    }
                    message.setLockdownAnnouncements = lsx_lockdown_1.SetLockdownAnnouncements_Response.decode(reader, reader.uint32());
                    continue;
                case 12:
                    if (tag !== 98) {
                        break;
                    }
                    message.getFluffFiles = lsx_fluff_1.GetFluffFiles_Response.decode(reader, reader.uint32());
                    continue;
                case 13:
                    if (tag !== 106) {
                        break;
                    }
                    message.getFluffState = lsx_fluff_1.GetFluffState_Response.decode(reader, reader.uint32());
                    continue;
                case 14:
                    if (tag !== 114) {
                        break;
                    }
                    message.setFluffState = lsx_fluff_1.SetFluffState_Response.decode(reader, reader.uint32());
                    continue;
                case 15:
                    if (tag !== 122) {
                        break;
                    }
                    message.playAnnouncement = exports.PlayAnnouncement_Response.decode(reader, reader.uint32());
                    continue;
                case 16:
                    if (tag !== 130) {
                        break;
                    }
                    message.getModeSilentState = lsx_drone_1.GetModeSilentState_Response.decode(reader, reader.uint32());
                    continue;
                case 17:
                    if (tag !== 138) {
                        break;
                    }
                    message.setModeSilentState = lsx_drone_1.SetModeSilentState_Response.decode(reader, reader.uint32());
                    continue;
                case 18:
                    if (tag !== 146) {
                        break;
                    }
                    message.bombBase = lsx_drone_1.BombBase_Response.decode(reader, reader.uint32());
                    continue;
                case 19:
                    if (tag !== 154) {
                        break;
                    }
                    message.bombArea = lsx_drone_1.BombArea_Response.decode(reader, reader.uint32());
                    continue;
                case 20:
                    if (tag !== 162) {
                        break;
                    }
                    message.getBombAreaState = lsx_drone_1.GetBombAreaState_Response.decode(reader, reader.uint32());
                    continue;
                case 21:
                    if (tag !== 170) {
                        break;
                    }
                    message.getLightPowerState = lsx_light_1.GetLightPowerState_Response.decode(reader, reader.uint32());
                    continue;
                case 22:
                    if (tag !== 178) {
                        break;
                    }
                    message.setLightPowerState = lsx_light_1.SetLightPowerState_Response.decode(reader, reader.uint32());
                    continue;
                case 23:
                    if (tag !== 186) {
                        break;
                    }
                    message.getLightSwitchState = lsx_light_1.GetLightSwitchState_Response.decode(reader, reader.uint32());
                    continue;
                case 24:
                    if (tag !== 194) {
                        break;
                    }
                    message.setLightSwitchState = lsx_light_1.SetLightSwitchState_Response.decode(reader, reader.uint32());
                    continue;
                case 25:
                    if (tag !== 202) {
                        break;
                    }
                    message.getLightDmxState = lsx_light_1.GetLightDmxState_Response.decode(reader, reader.uint32());
                    continue;
                case 26:
                    if (tag !== 210) {
                        break;
                    }
                    message.setLightDmxState = lsx_light_1.SetLightDmxState_Response.decode(reader, reader.uint32());
                    continue;
                case 27:
                    if (tag !== 218) {
                        break;
                    }
                    message.getLightLockState = lsx_light_1.GetLightLockState_Response.decode(reader, reader.uint32());
                    continue;
                case 28:
                    if (tag !== 226) {
                        break;
                    }
                    message.setLightLockState = lsx_light_1.SetLightLockState_Response.decode(reader, reader.uint32());
                    continue;
                case 29:
                    if (tag !== 234) {
                        break;
                    }
                    message.getLightMode = lsx_light_1.GetLightMode_Response.decode(reader, reader.uint32());
                    continue;
                case 30:
                    if (tag !== 242) {
                        break;
                    }
                    message.setLightMode = lsx_light_1.SetLightMode_Response.decode(reader, reader.uint32());
                    continue;
                case 31:
                    if (tag !== 250) {
                        break;
                    }
                    message.getDevicePowerState = lsx_power_1.GetDevicePowerState_Response.decode(reader, reader.uint32());
                    continue;
                case 32:
                    if (tag !== 258) {
                        break;
                    }
                    message.setDevicePowerState = lsx_power_1.SetDevicePowerState_Response.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            getPowerPlantState: isSet(object.getPowerPlantState)
                ? lsx_power_1.GetPowerPlantState_Response.fromJSON(object.getPowerPlantState)
                : undefined,
            setPowerPlantState: isSet(object.setPowerPlantState)
                ? lsx_power_1.SetPowerPlantState_Response.fromJSON(object.setPowerPlantState)
                : undefined,
            getAnnouncementFiles: isSet(object.getAnnouncementFiles)
                ? exports.GetAnnouncementFiles_Response.fromJSON(object.getAnnouncementFiles)
                : undefined,
            getLockdownState: isSet(object.getLockdownState)
                ? lsx_lockdown_1.GetLockdownState_Response.fromJSON(object.getLockdownState)
                : undefined,
            setLockdownState: isSet(object.setLockdownState)
                ? lsx_lockdown_1.SetLockdownState_Response.fromJSON(object.setLockdownState)
                : undefined,
            getAutoLockdown: isSet(object.getAutoLockdown)
                ? lsx_lockdown_1.GetAutoLockdown_Response.fromJSON(object.getAutoLockdown)
                : undefined,
            setAutoLockdown: isSet(object.setAutoLockdown)
                ? lsx_lockdown_1.SetAutoLockdown_Response.fromJSON(object.setAutoLockdown)
                : undefined,
            getLockdownAnnouncements: isSet(object.getLockdownAnnouncements)
                ? lsx_lockdown_1.GetLockdownAnnouncements_Response.fromJSON(object.getLockdownAnnouncements)
                : undefined,
            setLockdownAnnouncements: isSet(object.setLockdownAnnouncements)
                ? lsx_lockdown_1.SetLockdownAnnouncements_Response.fromJSON(object.setLockdownAnnouncements)
                : undefined,
            getFluffFiles: isSet(object.getFluffFiles) ? lsx_fluff_1.GetFluffFiles_Response.fromJSON(object.getFluffFiles) : undefined,
            getFluffState: isSet(object.getFluffState) ? lsx_fluff_1.GetFluffState_Response.fromJSON(object.getFluffState) : undefined,
            setFluffState: isSet(object.setFluffState) ? lsx_fluff_1.SetFluffState_Response.fromJSON(object.setFluffState) : undefined,
            playAnnouncement: isSet(object.playAnnouncement)
                ? exports.PlayAnnouncement_Response.fromJSON(object.playAnnouncement)
                : undefined,
            getModeSilentState: isSet(object.getModeSilentState)
                ? lsx_drone_1.GetModeSilentState_Response.fromJSON(object.getModeSilentState)
                : undefined,
            setModeSilentState: isSet(object.setModeSilentState)
                ? lsx_drone_1.SetModeSilentState_Response.fromJSON(object.setModeSilentState)
                : undefined,
            bombBase: isSet(object.bombBase) ? lsx_drone_1.BombBase_Response.fromJSON(object.bombBase) : undefined,
            bombArea: isSet(object.bombArea) ? lsx_drone_1.BombArea_Response.fromJSON(object.bombArea) : undefined,
            getBombAreaState: isSet(object.getBombAreaState)
                ? lsx_drone_1.GetBombAreaState_Response.fromJSON(object.getBombAreaState)
                : undefined,
            getLightPowerState: isSet(object.getLightPowerState)
                ? lsx_light_1.GetLightPowerState_Response.fromJSON(object.getLightPowerState)
                : undefined,
            setLightPowerState: isSet(object.setLightPowerState)
                ? lsx_light_1.SetLightPowerState_Response.fromJSON(object.setLightPowerState)
                : undefined,
            getLightSwitchState: isSet(object.getLightSwitchState)
                ? lsx_light_1.GetLightSwitchState_Response.fromJSON(object.getLightSwitchState)
                : undefined,
            setLightSwitchState: isSet(object.setLightSwitchState)
                ? lsx_light_1.SetLightSwitchState_Response.fromJSON(object.setLightSwitchState)
                : undefined,
            getLightDmxState: isSet(object.getLightDmxState)
                ? lsx_light_1.GetLightDmxState_Response.fromJSON(object.getLightDmxState)
                : undefined,
            setLightDmxState: isSet(object.setLightDmxState)
                ? lsx_light_1.SetLightDmxState_Response.fromJSON(object.setLightDmxState)
                : undefined,
            getLightLockState: isSet(object.getLightLockState)
                ? lsx_light_1.GetLightLockState_Response.fromJSON(object.getLightLockState)
                : undefined,
            setLightLockState: isSet(object.setLightLockState)
                ? lsx_light_1.SetLightLockState_Response.fromJSON(object.setLightLockState)
                : undefined,
            getLightMode: isSet(object.getLightMode) ? lsx_light_1.GetLightMode_Response.fromJSON(object.getLightMode) : undefined,
            setLightMode: isSet(object.setLightMode) ? lsx_light_1.SetLightMode_Response.fromJSON(object.setLightMode) : undefined,
            getDevicePowerState: isSet(object.getDevicePowerState)
                ? lsx_power_1.GetDevicePowerState_Response.fromJSON(object.getDevicePowerState)
                : undefined,
            setDevicePowerState: isSet(object.setDevicePowerState)
                ? lsx_power_1.SetDevicePowerState_Response.fromJSON(object.setDevicePowerState)
                : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.getPowerPlantState !== undefined) {
            obj.getPowerPlantState = lsx_power_1.GetPowerPlantState_Response.toJSON(message.getPowerPlantState);
        }
        if (message.setPowerPlantState !== undefined) {
            obj.setPowerPlantState = lsx_power_1.SetPowerPlantState_Response.toJSON(message.setPowerPlantState);
        }
        if (message.getAnnouncementFiles !== undefined) {
            obj.getAnnouncementFiles = exports.GetAnnouncementFiles_Response.toJSON(message.getAnnouncementFiles);
        }
        if (message.getLockdownState !== undefined) {
            obj.getLockdownState = lsx_lockdown_1.GetLockdownState_Response.toJSON(message.getLockdownState);
        }
        if (message.setLockdownState !== undefined) {
            obj.setLockdownState = lsx_lockdown_1.SetLockdownState_Response.toJSON(message.setLockdownState);
        }
        if (message.getAutoLockdown !== undefined) {
            obj.getAutoLockdown = lsx_lockdown_1.GetAutoLockdown_Response.toJSON(message.getAutoLockdown);
        }
        if (message.setAutoLockdown !== undefined) {
            obj.setAutoLockdown = lsx_lockdown_1.SetAutoLockdown_Response.toJSON(message.setAutoLockdown);
        }
        if (message.getLockdownAnnouncements !== undefined) {
            obj.getLockdownAnnouncements = lsx_lockdown_1.GetLockdownAnnouncements_Response.toJSON(message.getLockdownAnnouncements);
        }
        if (message.setLockdownAnnouncements !== undefined) {
            obj.setLockdownAnnouncements = lsx_lockdown_1.SetLockdownAnnouncements_Response.toJSON(message.setLockdownAnnouncements);
        }
        if (message.getFluffFiles !== undefined) {
            obj.getFluffFiles = lsx_fluff_1.GetFluffFiles_Response.toJSON(message.getFluffFiles);
        }
        if (message.getFluffState !== undefined) {
            obj.getFluffState = lsx_fluff_1.GetFluffState_Response.toJSON(message.getFluffState);
        }
        if (message.setFluffState !== undefined) {
            obj.setFluffState = lsx_fluff_1.SetFluffState_Response.toJSON(message.setFluffState);
        }
        if (message.playAnnouncement !== undefined) {
            obj.playAnnouncement = exports.PlayAnnouncement_Response.toJSON(message.playAnnouncement);
        }
        if (message.getModeSilentState !== undefined) {
            obj.getModeSilentState = lsx_drone_1.GetModeSilentState_Response.toJSON(message.getModeSilentState);
        }
        if (message.setModeSilentState !== undefined) {
            obj.setModeSilentState = lsx_drone_1.SetModeSilentState_Response.toJSON(message.setModeSilentState);
        }
        if (message.bombBase !== undefined) {
            obj.bombBase = lsx_drone_1.BombBase_Response.toJSON(message.bombBase);
        }
        if (message.bombArea !== undefined) {
            obj.bombArea = lsx_drone_1.BombArea_Response.toJSON(message.bombArea);
        }
        if (message.getBombAreaState !== undefined) {
            obj.getBombAreaState = lsx_drone_1.GetBombAreaState_Response.toJSON(message.getBombAreaState);
        }
        if (message.getLightPowerState !== undefined) {
            obj.getLightPowerState = lsx_light_1.GetLightPowerState_Response.toJSON(message.getLightPowerState);
        }
        if (message.setLightPowerState !== undefined) {
            obj.setLightPowerState = lsx_light_1.SetLightPowerState_Response.toJSON(message.setLightPowerState);
        }
        if (message.getLightSwitchState !== undefined) {
            obj.getLightSwitchState = lsx_light_1.GetLightSwitchState_Response.toJSON(message.getLightSwitchState);
        }
        if (message.setLightSwitchState !== undefined) {
            obj.setLightSwitchState = lsx_light_1.SetLightSwitchState_Response.toJSON(message.setLightSwitchState);
        }
        if (message.getLightDmxState !== undefined) {
            obj.getLightDmxState = lsx_light_1.GetLightDmxState_Response.toJSON(message.getLightDmxState);
        }
        if (message.setLightDmxState !== undefined) {
            obj.setLightDmxState = lsx_light_1.SetLightDmxState_Response.toJSON(message.setLightDmxState);
        }
        if (message.getLightLockState !== undefined) {
            obj.getLightLockState = lsx_light_1.GetLightLockState_Response.toJSON(message.getLightLockState);
        }
        if (message.setLightLockState !== undefined) {
            obj.setLightLockState = lsx_light_1.SetLightLockState_Response.toJSON(message.setLightLockState);
        }
        if (message.getLightMode !== undefined) {
            obj.getLightMode = lsx_light_1.GetLightMode_Response.toJSON(message.getLightMode);
        }
        if (message.setLightMode !== undefined) {
            obj.setLightMode = lsx_light_1.SetLightMode_Response.toJSON(message.setLightMode);
        }
        if (message.getDevicePowerState !== undefined) {
            obj.getDevicePowerState = lsx_power_1.GetDevicePowerState_Response.toJSON(message.getDevicePowerState);
        }
        if (message.setDevicePowerState !== undefined) {
            obj.setDevicePowerState = lsx_power_1.SetDevicePowerState_Response.toJSON(message.setDevicePowerState);
        }
        return obj;
    },
    create(base) {
        return exports.Response.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseResponse();
        message.getPowerPlantState = (object.getPowerPlantState !== undefined && object.getPowerPlantState !== null)
            ? lsx_power_1.GetPowerPlantState_Response.fromPartial(object.getPowerPlantState)
            : undefined;
        message.setPowerPlantState = (object.setPowerPlantState !== undefined && object.setPowerPlantState !== null)
            ? lsx_power_1.SetPowerPlantState_Response.fromPartial(object.setPowerPlantState)
            : undefined;
        message.getAnnouncementFiles = (object.getAnnouncementFiles !== undefined && object.getAnnouncementFiles !== null)
            ? exports.GetAnnouncementFiles_Response.fromPartial(object.getAnnouncementFiles)
            : undefined;
        message.getLockdownState = (object.getLockdownState !== undefined && object.getLockdownState !== null)
            ? lsx_lockdown_1.GetLockdownState_Response.fromPartial(object.getLockdownState)
            : undefined;
        message.setLockdownState = (object.setLockdownState !== undefined && object.setLockdownState !== null)
            ? lsx_lockdown_1.SetLockdownState_Response.fromPartial(object.setLockdownState)
            : undefined;
        message.getAutoLockdown = (object.getAutoLockdown !== undefined && object.getAutoLockdown !== null)
            ? lsx_lockdown_1.GetAutoLockdown_Response.fromPartial(object.getAutoLockdown)
            : undefined;
        message.setAutoLockdown = (object.setAutoLockdown !== undefined && object.setAutoLockdown !== null)
            ? lsx_lockdown_1.SetAutoLockdown_Response.fromPartial(object.setAutoLockdown)
            : undefined;
        message.getLockdownAnnouncements =
            (object.getLockdownAnnouncements !== undefined && object.getLockdownAnnouncements !== null)
                ? lsx_lockdown_1.GetLockdownAnnouncements_Response.fromPartial(object.getLockdownAnnouncements)
                : undefined;
        message.setLockdownAnnouncements =
            (object.setLockdownAnnouncements !== undefined && object.setLockdownAnnouncements !== null)
                ? lsx_lockdown_1.SetLockdownAnnouncements_Response.fromPartial(object.setLockdownAnnouncements)
                : undefined;
        message.getFluffFiles = (object.getFluffFiles !== undefined && object.getFluffFiles !== null)
            ? lsx_fluff_1.GetFluffFiles_Response.fromPartial(object.getFluffFiles)
            : undefined;
        message.getFluffState = (object.getFluffState !== undefined && object.getFluffState !== null)
            ? lsx_fluff_1.GetFluffState_Response.fromPartial(object.getFluffState)
            : undefined;
        message.setFluffState = (object.setFluffState !== undefined && object.setFluffState !== null)
            ? lsx_fluff_1.SetFluffState_Response.fromPartial(object.setFluffState)
            : undefined;
        message.playAnnouncement = (object.playAnnouncement !== undefined && object.playAnnouncement !== null)
            ? exports.PlayAnnouncement_Response.fromPartial(object.playAnnouncement)
            : undefined;
        message.getModeSilentState = (object.getModeSilentState !== undefined && object.getModeSilentState !== null)
            ? lsx_drone_1.GetModeSilentState_Response.fromPartial(object.getModeSilentState)
            : undefined;
        message.setModeSilentState = (object.setModeSilentState !== undefined && object.setModeSilentState !== null)
            ? lsx_drone_1.SetModeSilentState_Response.fromPartial(object.setModeSilentState)
            : undefined;
        message.bombBase = (object.bombBase !== undefined && object.bombBase !== null)
            ? lsx_drone_1.BombBase_Response.fromPartial(object.bombBase)
            : undefined;
        message.bombArea = (object.bombArea !== undefined && object.bombArea !== null)
            ? lsx_drone_1.BombArea_Response.fromPartial(object.bombArea)
            : undefined;
        message.getBombAreaState = (object.getBombAreaState !== undefined && object.getBombAreaState !== null)
            ? lsx_drone_1.GetBombAreaState_Response.fromPartial(object.getBombAreaState)
            : undefined;
        message.getLightPowerState = (object.getLightPowerState !== undefined && object.getLightPowerState !== null)
            ? lsx_light_1.GetLightPowerState_Response.fromPartial(object.getLightPowerState)
            : undefined;
        message.setLightPowerState = (object.setLightPowerState !== undefined && object.setLightPowerState !== null)
            ? lsx_light_1.SetLightPowerState_Response.fromPartial(object.setLightPowerState)
            : undefined;
        message.getLightSwitchState = (object.getLightSwitchState !== undefined && object.getLightSwitchState !== null)
            ? lsx_light_1.GetLightSwitchState_Response.fromPartial(object.getLightSwitchState)
            : undefined;
        message.setLightSwitchState = (object.setLightSwitchState !== undefined && object.setLightSwitchState !== null)
            ? lsx_light_1.SetLightSwitchState_Response.fromPartial(object.setLightSwitchState)
            : undefined;
        message.getLightDmxState = (object.getLightDmxState !== undefined && object.getLightDmxState !== null)
            ? lsx_light_1.GetLightDmxState_Response.fromPartial(object.getLightDmxState)
            : undefined;
        message.setLightDmxState = (object.setLightDmxState !== undefined && object.setLightDmxState !== null)
            ? lsx_light_1.SetLightDmxState_Response.fromPartial(object.setLightDmxState)
            : undefined;
        message.getLightLockState = (object.getLightLockState !== undefined && object.getLightLockState !== null)
            ? lsx_light_1.GetLightLockState_Response.fromPartial(object.getLightLockState)
            : undefined;
        message.setLightLockState = (object.setLightLockState !== undefined && object.setLightLockState !== null)
            ? lsx_light_1.SetLightLockState_Response.fromPartial(object.setLightLockState)
            : undefined;
        message.getLightMode = (object.getLightMode !== undefined && object.getLightMode !== null)
            ? lsx_light_1.GetLightMode_Response.fromPartial(object.getLightMode)
            : undefined;
        message.setLightMode = (object.setLightMode !== undefined && object.setLightMode !== null)
            ? lsx_light_1.SetLightMode_Response.fromPartial(object.setLightMode)
            : undefined;
        message.getDevicePowerState = (object.getDevicePowerState !== undefined && object.getDevicePowerState !== null)
            ? lsx_power_1.GetDevicePowerState_Response.fromPartial(object.getDevicePowerState)
            : undefined;
        message.setDevicePowerState = (object.setDevicePowerState !== undefined && object.setDevicePowerState !== null)
            ? lsx_power_1.SetDevicePowerState_Response.fromPartial(object.setDevicePowerState)
            : undefined;
        return message;
    },
};
function createBaseError() {
    return { type: "", message: "" };
}
exports.Error = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.type !== "") {
            writer.uint32(10).string(message.type);
        }
        if (message.message !== "") {
            writer.uint32(18).string(message.message);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseError();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.type = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.message = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            type: isSet(object.type) ? globalThis.String(object.type) : "",
            message: isSet(object.message) ? globalThis.String(object.message) : "",
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.type !== "") {
            obj.type = message.type;
        }
        if (message.message !== "") {
            obj.message = message.message;
        }
        return obj;
    },
    create(base) {
        return exports.Error.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseError();
        message.type = object.type ?? "";
        message.message = object.message ?? "";
        return message;
    },
};
function createBaseLsxMessage() {
    return { id: "", request: undefined, response: undefined, error: undefined };
}
exports.LsxMessage = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.id !== "") {
            writer.uint32(10).string(message.id);
        }
        if (message.request !== undefined) {
            exports.Request.encode(message.request, writer.uint32(18).fork()).ldelim();
        }
        if (message.response !== undefined) {
            exports.Response.encode(message.response, writer.uint32(26).fork()).ldelim();
        }
        if (message.error !== undefined) {
            exports.Error.encode(message.error, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseLsxMessage();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.id = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.request = exports.Request.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.response = exports.Response.decode(reader, reader.uint32());
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.error = exports.Error.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            id: isSet(object.id) ? globalThis.String(object.id) : "",
            request: isSet(object.request) ? exports.Request.fromJSON(object.request) : undefined,
            response: isSet(object.response) ? exports.Response.fromJSON(object.response) : undefined,
            error: isSet(object.error) ? exports.Error.fromJSON(object.error) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.id !== "") {
            obj.id = message.id;
        }
        if (message.request !== undefined) {
            obj.request = exports.Request.toJSON(message.request);
        }
        if (message.response !== undefined) {
            obj.response = exports.Response.toJSON(message.response);
        }
        if (message.error !== undefined) {
            obj.error = exports.Error.toJSON(message.error);
        }
        return obj;
    },
    create(base) {
        return exports.LsxMessage.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseLsxMessage();
        message.id = object.id ?? "";
        message.request = (object.request !== undefined && object.request !== null)
            ? exports.Request.fromPartial(object.request)
            : undefined;
        message.response = (object.response !== undefined && object.response !== null)
            ? exports.Response.fromPartial(object.response)
            : undefined;
        message.error = (object.error !== undefined && object.error !== null) ? exports.Error.fromPartial(object.error) : undefined;
        return message;
    },
};
function createBaseGetAnnouncementFiles() {
    return {};
}
exports.GetAnnouncementFiles = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetAnnouncementFiles();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.GetAnnouncementFiles.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseGetAnnouncementFiles();
        return message;
    },
};
function createBaseGetAnnouncementFiles_Response() {
    return { files: [] };
}
exports.GetAnnouncementFiles_Response = {
    encode(message, writer = _m0.Writer.create()) {
        for (const v of message.files) {
            writer.uint32(10).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetAnnouncementFiles_Response();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.files.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { files: globalThis.Array.isArray(object?.files) ? object.files.map((e) => globalThis.String(e)) : [] };
    },
    toJSON(message) {
        const obj = {};
        if (message.files?.length) {
            obj.files = message.files;
        }
        return obj;
    },
    create(base) {
        return exports.GetAnnouncementFiles_Response.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseGetAnnouncementFiles_Response();
        message.files = object.files?.map((e) => e) || [];
        return message;
    },
};
function createBaseGetAnnouncementFiles_Request() {
    return {};
}
exports.GetAnnouncementFiles_Request = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetAnnouncementFiles_Request();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.GetAnnouncementFiles_Request.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseGetAnnouncementFiles_Request();
        return message;
    },
};
function createBasePlayAnnouncement() {
    return {};
}
exports.PlayAnnouncement = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePlayAnnouncement();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.PlayAnnouncement.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBasePlayAnnouncement();
        return message;
    },
};
function createBasePlayAnnouncement_Request() {
    return { filepath: "" };
}
exports.PlayAnnouncement_Request = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.filepath !== "") {
            writer.uint32(10).string(message.filepath);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePlayAnnouncement_Request();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.filepath = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { filepath: isSet(object.filepath) ? globalThis.String(object.filepath) : "" };
    },
    toJSON(message) {
        const obj = {};
        if (message.filepath !== "") {
            obj.filepath = message.filepath;
        }
        return obj;
    },
    create(base) {
        return exports.PlayAnnouncement_Request.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBasePlayAnnouncement_Request();
        message.filepath = object.filepath ?? "";
        return message;
    },
};
function createBasePlayAnnouncement_Response() {
    return {};
}
exports.PlayAnnouncement_Response = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePlayAnnouncement_Response();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.PlayAnnouncement_Response.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBasePlayAnnouncement_Response();
        return message;
    },
};
function isSet(value) {
    return value !== null && value !== undefined;
}
