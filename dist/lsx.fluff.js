"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               v4.25.3
// source: lsx.fluff.proto
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SetFluffState_Response = exports.SetFluffState_Request = exports.SetFluffState = exports.GetFluffState_Request = exports.GetFluffState_Response = exports.GetFluffState = exports.GetFluffFiles_Request = exports.GetFluffFiles_Response = exports.GetFluffFiles = void 0;
/* eslint-disable */
const _m0 = __importStar(require("protobufjs/minimal"));
function createBaseGetFluffFiles() {
    return {};
}
exports.GetFluffFiles = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetFluffFiles();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.GetFluffFiles.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseGetFluffFiles();
        return message;
    },
};
function createBaseGetFluffFiles_Response() {
    return { files: [] };
}
exports.GetFluffFiles_Response = {
    encode(message, writer = _m0.Writer.create()) {
        for (const v of message.files) {
            writer.uint32(10).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetFluffFiles_Response();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.files.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { files: globalThis.Array.isArray(object?.files) ? object.files.map((e) => globalThis.String(e)) : [] };
    },
    toJSON(message) {
        const obj = {};
        if (message.files?.length) {
            obj.files = message.files;
        }
        return obj;
    },
    create(base) {
        return exports.GetFluffFiles_Response.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseGetFluffFiles_Response();
        message.files = object.files?.map((e) => e) || [];
        return message;
    },
};
function createBaseGetFluffFiles_Request() {
    return {};
}
exports.GetFluffFiles_Request = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetFluffFiles_Request();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.GetFluffFiles_Request.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseGetFluffFiles_Request();
        return message;
    },
};
function createBaseGetFluffState() {
    return {};
}
exports.GetFluffState = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetFluffState();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.GetFluffState.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseGetFluffState();
        return message;
    },
};
function createBaseGetFluffState_Response() {
    return { state: false };
}
exports.GetFluffState_Response = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.state !== false) {
            writer.uint32(8).bool(message.state);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetFluffState_Response();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.state = reader.bool();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { state: isSet(object.state) ? globalThis.Boolean(object.state) : false };
    },
    toJSON(message) {
        const obj = {};
        if (message.state !== false) {
            obj.state = message.state;
        }
        return obj;
    },
    create(base) {
        return exports.GetFluffState_Response.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseGetFluffState_Response();
        message.state = object.state ?? false;
        return message;
    },
};
function createBaseGetFluffState_Request() {
    return {};
}
exports.GetFluffState_Request = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetFluffState_Request();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.GetFluffState_Request.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseGetFluffState_Request();
        return message;
    },
};
function createBaseSetFluffState() {
    return {};
}
exports.SetFluffState = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSetFluffState();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.SetFluffState.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseSetFluffState();
        return message;
    },
};
function createBaseSetFluffState_Request() {
    return { state: false };
}
exports.SetFluffState_Request = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.state !== false) {
            writer.uint32(8).bool(message.state);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSetFluffState_Request();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.state = reader.bool();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { state: isSet(object.state) ? globalThis.Boolean(object.state) : false };
    },
    toJSON(message) {
        const obj = {};
        if (message.state !== false) {
            obj.state = message.state;
        }
        return obj;
    },
    create(base) {
        return exports.SetFluffState_Request.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseSetFluffState_Request();
        message.state = object.state ?? false;
        return message;
    },
};
function createBaseSetFluffState_Response() {
    return {};
}
exports.SetFluffState_Response = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSetFluffState_Response();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.SetFluffState_Response.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseSetFluffState_Response();
        return message;
    },
};
function isSet(value) {
    return value !== null && value !== undefined;
}
