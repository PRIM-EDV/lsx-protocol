"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               v4.25.3
// source: lsx.power.proto
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetDevicePowerState_Response = exports.GetDevicePowerState_Request = exports.GetDevicePowerState = exports.SetDevicePowerState_Response = exports.SetDevicePowerState_Request = exports.SetDevicePowerState = exports.SetPowerPlantState_Response = exports.SetPowerPlantState_Request = exports.SetPowerPlantState = exports.GetPowerPlantState_Response = exports.GetPowerPlantState_Request = exports.GetPowerPlantState = exports.PowerDevice = exports.PowerPlantState = exports.PowerState = void 0;
exports.powerStateFromJSON = powerStateFromJSON;
exports.powerStateToJSON = powerStateToJSON;
exports.powerPlantStateFromJSON = powerPlantStateFromJSON;
exports.powerPlantStateToJSON = powerPlantStateToJSON;
exports.powerDeviceFromJSON = powerDeviceFromJSON;
exports.powerDeviceToJSON = powerDeviceToJSON;
/* eslint-disable */
const _m0 = __importStar(require("protobufjs/minimal"));
var PowerState;
(function (PowerState) {
    PowerState[PowerState["POWER_STATE_EMPTY"] = 0] = "POWER_STATE_EMPTY";
    PowerState[PowerState["POWER_STATE_POWERED"] = 1] = "POWER_STATE_POWERED";
    PowerState[PowerState["POWER_STATE_CRITICAL"] = 2] = "POWER_STATE_CRITICAL";
    PowerState[PowerState["POWER_STATE_UNPOWERED"] = 3] = "POWER_STATE_UNPOWERED";
    PowerState[PowerState["POWER_STATE_EMERGENCY"] = 4] = "POWER_STATE_EMERGENCY";
    PowerState[PowerState["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(PowerState || (exports.PowerState = PowerState = {}));
function powerStateFromJSON(object) {
    switch (object) {
        case 0:
        case "POWER_STATE_EMPTY":
            return PowerState.POWER_STATE_EMPTY;
        case 1:
        case "POWER_STATE_POWERED":
            return PowerState.POWER_STATE_POWERED;
        case 2:
        case "POWER_STATE_CRITICAL":
            return PowerState.POWER_STATE_CRITICAL;
        case 3:
        case "POWER_STATE_UNPOWERED":
            return PowerState.POWER_STATE_UNPOWERED;
        case 4:
        case "POWER_STATE_EMERGENCY":
            return PowerState.POWER_STATE_EMERGENCY;
        case -1:
        case "UNRECOGNIZED":
        default:
            return PowerState.UNRECOGNIZED;
    }
}
function powerStateToJSON(object) {
    switch (object) {
        case PowerState.POWER_STATE_EMPTY:
            return "POWER_STATE_EMPTY";
        case PowerState.POWER_STATE_POWERED:
            return "POWER_STATE_POWERED";
        case PowerState.POWER_STATE_CRITICAL:
            return "POWER_STATE_CRITICAL";
        case PowerState.POWER_STATE_UNPOWERED:
            return "POWER_STATE_UNPOWERED";
        case PowerState.POWER_STATE_EMERGENCY:
            return "POWER_STATE_EMERGENCY";
        case PowerState.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
var PowerPlantState;
(function (PowerPlantState) {
    PowerPlantState[PowerPlantState["STATE_EMPTY"] = 0] = "STATE_EMPTY";
    PowerPlantState[PowerPlantState["STATE_NORMAL"] = 1] = "STATE_NORMAL";
    PowerPlantState[PowerPlantState["STATE_POWER_SAVING"] = 2] = "STATE_POWER_SAVING";
    PowerPlantState[PowerPlantState["STATE_CRITICAL"] = 3] = "STATE_CRITICAL";
    PowerPlantState[PowerPlantState["STATE_OFFLINE"] = 4] = "STATE_OFFLINE";
    PowerPlantState[PowerPlantState["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(PowerPlantState || (exports.PowerPlantState = PowerPlantState = {}));
function powerPlantStateFromJSON(object) {
    switch (object) {
        case 0:
        case "STATE_EMPTY":
            return PowerPlantState.STATE_EMPTY;
        case 1:
        case "STATE_NORMAL":
            return PowerPlantState.STATE_NORMAL;
        case 2:
        case "STATE_POWER_SAVING":
            return PowerPlantState.STATE_POWER_SAVING;
        case 3:
        case "STATE_CRITICAL":
            return PowerPlantState.STATE_CRITICAL;
        case 4:
        case "STATE_OFFLINE":
            return PowerPlantState.STATE_OFFLINE;
        case -1:
        case "UNRECOGNIZED":
        default:
            return PowerPlantState.UNRECOGNIZED;
    }
}
function powerPlantStateToJSON(object) {
    switch (object) {
        case PowerPlantState.STATE_EMPTY:
            return "STATE_EMPTY";
        case PowerPlantState.STATE_NORMAL:
            return "STATE_NORMAL";
        case PowerPlantState.STATE_POWER_SAVING:
            return "STATE_POWER_SAVING";
        case PowerPlantState.STATE_CRITICAL:
            return "STATE_CRITICAL";
        case PowerPlantState.STATE_OFFLINE:
            return "STATE_OFFLINE";
        case PowerPlantState.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
var PowerDevice;
(function (PowerDevice) {
    PowerDevice[PowerDevice["DEVICE_CIC_MAPTOOL"] = 0] = "DEVICE_CIC_MAPTOOL";
    PowerDevice[PowerDevice["DEVICE_ADM_BASETOOL"] = 1] = "DEVICE_ADM_BASETOOL";
    PowerDevice[PowerDevice["DEVICE_IRD_RAPIDCARE"] = 2] = "DEVICE_IRD_RAPIDCARE";
    PowerDevice[PowerDevice["DEVICE_MED_OP_ROOM"] = 3] = "DEVICE_MED_OP_ROOM";
    PowerDevice[PowerDevice["DEVICE_CIC_COFFEE"] = 4] = "DEVICE_CIC_COFFEE";
    PowerDevice[PowerDevice["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(PowerDevice || (exports.PowerDevice = PowerDevice = {}));
function powerDeviceFromJSON(object) {
    switch (object) {
        case 0:
        case "DEVICE_CIC_MAPTOOL":
            return PowerDevice.DEVICE_CIC_MAPTOOL;
        case 1:
        case "DEVICE_ADM_BASETOOL":
            return PowerDevice.DEVICE_ADM_BASETOOL;
        case 2:
        case "DEVICE_IRD_RAPIDCARE":
            return PowerDevice.DEVICE_IRD_RAPIDCARE;
        case 3:
        case "DEVICE_MED_OP_ROOM":
            return PowerDevice.DEVICE_MED_OP_ROOM;
        case 4:
        case "DEVICE_CIC_COFFEE":
            return PowerDevice.DEVICE_CIC_COFFEE;
        case -1:
        case "UNRECOGNIZED":
        default:
            return PowerDevice.UNRECOGNIZED;
    }
}
function powerDeviceToJSON(object) {
    switch (object) {
        case PowerDevice.DEVICE_CIC_MAPTOOL:
            return "DEVICE_CIC_MAPTOOL";
        case PowerDevice.DEVICE_ADM_BASETOOL:
            return "DEVICE_ADM_BASETOOL";
        case PowerDevice.DEVICE_IRD_RAPIDCARE:
            return "DEVICE_IRD_RAPIDCARE";
        case PowerDevice.DEVICE_MED_OP_ROOM:
            return "DEVICE_MED_OP_ROOM";
        case PowerDevice.DEVICE_CIC_COFFEE:
            return "DEVICE_CIC_COFFEE";
        case PowerDevice.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
function createBaseGetPowerPlantState() {
    return {};
}
exports.GetPowerPlantState = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetPowerPlantState();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.GetPowerPlantState.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseGetPowerPlantState();
        return message;
    },
};
function createBaseGetPowerPlantState_Request() {
    return {};
}
exports.GetPowerPlantState_Request = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetPowerPlantState_Request();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.GetPowerPlantState_Request.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseGetPowerPlantState_Request();
        return message;
    },
};
function createBaseGetPowerPlantState_Response() {
    return { state: 0 };
}
exports.GetPowerPlantState_Response = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.state !== 0) {
            writer.uint32(8).int32(message.state);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetPowerPlantState_Response();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.state = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { state: isSet(object.state) ? powerPlantStateFromJSON(object.state) : 0 };
    },
    toJSON(message) {
        const obj = {};
        if (message.state !== 0) {
            obj.state = powerPlantStateToJSON(message.state);
        }
        return obj;
    },
    create(base) {
        return exports.GetPowerPlantState_Response.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseGetPowerPlantState_Response();
        message.state = object.state ?? 0;
        return message;
    },
};
function createBaseSetPowerPlantState() {
    return {};
}
exports.SetPowerPlantState = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSetPowerPlantState();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.SetPowerPlantState.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseSetPowerPlantState();
        return message;
    },
};
function createBaseSetPowerPlantState_Request() {
    return { state: 0 };
}
exports.SetPowerPlantState_Request = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.state !== 0) {
            writer.uint32(8).int32(message.state);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSetPowerPlantState_Request();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.state = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { state: isSet(object.state) ? powerPlantStateFromJSON(object.state) : 0 };
    },
    toJSON(message) {
        const obj = {};
        if (message.state !== 0) {
            obj.state = powerPlantStateToJSON(message.state);
        }
        return obj;
    },
    create(base) {
        return exports.SetPowerPlantState_Request.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseSetPowerPlantState_Request();
        message.state = object.state ?? 0;
        return message;
    },
};
function createBaseSetPowerPlantState_Response() {
    return {};
}
exports.SetPowerPlantState_Response = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSetPowerPlantState_Response();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.SetPowerPlantState_Response.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseSetPowerPlantState_Response();
        return message;
    },
};
function createBaseSetDevicePowerState() {
    return {};
}
exports.SetDevicePowerState = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSetDevicePowerState();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.SetDevicePowerState.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseSetDevicePowerState();
        return message;
    },
};
function createBaseSetDevicePowerState_Request() {
    return { device: 0, state: 0 };
}
exports.SetDevicePowerState_Request = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.device !== 0) {
            writer.uint32(8).int32(message.device);
        }
        if (message.state !== 0) {
            writer.uint32(16).int32(message.state);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSetDevicePowerState_Request();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.device = reader.int32();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.state = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            device: isSet(object.device) ? powerDeviceFromJSON(object.device) : 0,
            state: isSet(object.state) ? powerStateFromJSON(object.state) : 0,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.device !== 0) {
            obj.device = powerDeviceToJSON(message.device);
        }
        if (message.state !== 0) {
            obj.state = powerStateToJSON(message.state);
        }
        return obj;
    },
    create(base) {
        return exports.SetDevicePowerState_Request.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseSetDevicePowerState_Request();
        message.device = object.device ?? 0;
        message.state = object.state ?? 0;
        return message;
    },
};
function createBaseSetDevicePowerState_Response() {
    return {};
}
exports.SetDevicePowerState_Response = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSetDevicePowerState_Response();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.SetDevicePowerState_Response.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseSetDevicePowerState_Response();
        return message;
    },
};
function createBaseGetDevicePowerState() {
    return {};
}
exports.GetDevicePowerState = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetDevicePowerState();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.GetDevicePowerState.fromPartial(base ?? {});
    },
    fromPartial(_) {
        const message = createBaseGetDevicePowerState();
        return message;
    },
};
function createBaseGetDevicePowerState_Request() {
    return { device: 0 };
}
exports.GetDevicePowerState_Request = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.device !== 0) {
            writer.uint32(8).int32(message.device);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetDevicePowerState_Request();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.device = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { device: isSet(object.device) ? powerDeviceFromJSON(object.device) : 0 };
    },
    toJSON(message) {
        const obj = {};
        if (message.device !== 0) {
            obj.device = powerDeviceToJSON(message.device);
        }
        return obj;
    },
    create(base) {
        return exports.GetDevicePowerState_Request.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseGetDevicePowerState_Request();
        message.device = object.device ?? 0;
        return message;
    },
};
function createBaseGetDevicePowerState_Response() {
    return { state: 0 };
}
exports.GetDevicePowerState_Response = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.state !== 0) {
            writer.uint32(8).int32(message.state);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetDevicePowerState_Response();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.state = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { state: isSet(object.state) ? powerStateFromJSON(object.state) : 0 };
    },
    toJSON(message) {
        const obj = {};
        if (message.state !== 0) {
            obj.state = powerStateToJSON(message.state);
        }
        return obj;
    },
    create(base) {
        return exports.GetDevicePowerState_Response.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseGetDevicePowerState_Response();
        message.state = object.state ?? 0;
        return message;
    },
};
function isSet(value) {
    return value !== null && value !== undefined;
}
